apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    signingConfigs {
        config {
            keyAlias 'myKey'
            keyPassword 'myPassword'
            storeFile file('D:/Keys/key.jks')
            storePassword 'myStorePassword'
        }
    }
    defaultConfig {
        applicationId "walot.softwaredesign"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode getVerCode()
        versionName getVerName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${applicationId}-${variant.versionName}.apk"
        }
    }
    flavorDimensions "version"
    productFlavors {
        develop {
            dimension "version"
            versionNameSuffix '-dev'
        }
        master {
            dimension "version"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation 'com.google.android.material:material:1.1.0-alpha01'
}

static def getVerName() {
    def command = "git describe --tags"
    def process = command.execute()
    def output = process.in.text

    if (output == "") {
        return "0.0.0"
    }
    else if (output.contains('-')) {
        def desc = output.split('-')
        def ver = desc[0]
        def patch = desc[1]

        return "${ver}.${patch}"
    }

    return "${output.split('\n')[0]}.0"
}

static def getVerCode() {
    def version = getVerName().replace('.', '-').split('-')
    return version[0].toInteger() * 100000 + version[1].toInteger() * 1000 + version[0].toInteger()
}
